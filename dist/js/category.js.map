{"version":3,"sources":["category.js"],"names":["$","CateDatas","init","renderDatas","eventList","on","addClass","siblings","removeClass","index","renderRight","sessStr","sessionStorage","getItem","categories","sessObj","JSON","parse","Date","now","time","data","get","result","meta","status","goodsDate","setItem","stringify","renderLeft","leftHtml","i","length","temphtml","cat_name","html","myScroll","IScroll","rightData","item2Obj","children","rightHtml","template","arr","imglength","console","log"],"mappings":"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","sourcesContent":["$(function () {\r\n    /* \r\n  1 实现了静态布局\r\n  2 首页动态渲染数据\r\n    1 左侧菜单是全部渲染 \r\n    2 右侧的内容 是 根据左侧 被选中的菜单 才开始 渲染 \r\n    3 写两个方法  (页面用到的数据 只要发送一次请求去获取 就可以提供给下次下次 使用 )\r\n      渲染左边（）\r\n      渲染右边（）\r\n  3 点击左侧菜单\r\n    1 左侧菜单被 激活选中\r\n    2 右侧的内容 动态跟着渲染\r\n      1 先获取 被点击的li标签的索引\r\n   */\r\n\r\n    //  全局变量 存放 接口的返回数据 result.data\r\n    let CateDatas;\r\n    // 方便各个函数调用\r\n    init();\r\n    function init() {\r\n        renderDatas();\r\n        eventList();\r\n    }\r\n\r\n    function eventList() {\r\n        // 1 左侧菜单的点击事件  委托 委派\r\n        // touchstart 原生的触屏事件  tap是点击事件在zepto中进行了封装\r\n        $(\".left_menu \").on(\"tap\", \"li\", function () {\r\n            $(this).addClass('active').siblings().removeClass('active');\r\n\r\n            // 获取 被点击的li标签的索引 $(this).index()\r\n            let index = $(this).index();\r\n            renderRight(index);\r\n        })\r\n    }\r\n\r\n    function renderDatas() {\r\n        let sessStr = sessionStorage.getItem('goodsDate');\r\n        if (!sessStr) {\r\n            categories()\r\n        } else {\r\n            // 将数据转换为json对象格式\r\n            let sessObj = JSON.parse(sessStr);\r\n            if (Date.now() - sessObj.time > 5000) {\r\n                categories();\r\n            } else {\r\n                // 将旧的值赋值给全局变量的CateDatas，让旧数值渲染页面\r\n                CateDatas = sessObj.data;\r\n                categories();\r\n            }\r\n        }\r\n    }\r\n    function categories() {\r\n        $.get('http://api.pyg.ak48.xyz/api/public/v1/categories', result => {\r\n            if (result.meta.status == 200) {\r\n                // 成功\r\n                // 获取要渲染左侧的数据\r\n                CateDatas = result.data;\r\n                // 渲染左边\r\n                // 将数据缓存起来\r\n                var goodsDate = { data: CateDatas, time: Date.now() }\r\n                sessionStorage.setItem('goodsDate', JSON.stringify(goodsDate));\r\n\r\n                // 模块化，将需求分离出去，不会显得复杂\r\n                renderLeft();\r\n                // 渲染右边\r\n                renderRight(0);\r\n            }\r\n        })\r\n    }\r\n    // 执行渲染左边\r\n    function renderLeft() {\r\n        let leftHtml = '';\r\n        for (let i = 0; i < CateDatas.length; i++) {\r\n            let temphtml = `\r\n            <li class=\"${i == 0 ? \"active\" : \"\"}\">${CateDatas[i].cat_name}</li>`\r\n            leftHtml += temphtml;\r\n        }\r\n        // 放入左容器\r\n        $(\".left_menu\").html(leftHtml);\r\n        // 元素生成完毕\r\n        var myScroll = new IScroll('.left_box');\r\n    }\r\n    function renderRight(index) {\r\n        // 获取 大家电的数据\r\n        let rightData;\r\n        let item2Obj;\r\n        // 获取右侧内容 需要循环的数据\r\n        item2Obj = CateDatas[index];\r\n        rightData = item2Obj.children;\r\n        let rightHtml = template(\"rightTpl\", { arr: rightData });\r\n        $(\".right_box\").html(rightHtml);\r\n        // 加isScroll插件需要严格对照他的规定格式，所以需要修改一下html格式,\r\n\r\n        // 因为iscroll插件还要元素满足已有成型的高度，\r\n        // 而图片元素加载比较慢，所以在其高度未加载完成前就已经执行scroll初始化，初始化的高度会有差异\r\n        // 解决方式是 img元素有onload事件,加载完毕执行函数\r\n        // 又因为需要执行每一张图片的onload事件，每一次执行都会执行一次初始化事件，浪费资源，\r\n        let imglength = $(\".right_box img\").length;\r\n        $(\".right_box img\").on(\"load\", function () {\r\n            imglength--;\r\n            if (imglength == 0) {\r\n                var myScroll = new IScroll('.right_box');\r\n            }\r\n        })\r\n\r\n        console.log($(\"#aaa\"))\r\n        $(\"#aaa\").on('load',function(){\r\n            console.log('afdsf')\r\n        })\r\n\r\n\r\n\r\n    }\r\n})"],"file":"category.js"}