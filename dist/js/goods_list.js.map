{"version":3,"sources":["goods_list.js"],"names":["$","QueryObj","query","cid","getUrl","pagenum","pagesize","TotalPage","init","eventList","mui","pullRefresh","container","down","height","auto","callback","cb","data","html","template","arr","endPulldownToRefresh","refresh","goodsSearch","up","console","log","endPullupToRefresh","append","on","href","location","func","get","res","meta","status","goods","Math","ceil","total","name","reg","RegExp","r","window","search","substr","match","decodeURI"],"mappings":"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","sourcesContent":["\r\n$(function () {\r\n    // 1 发送请求需要的参数对象 全局变量 方便修改\r\n    let QueryObj = {\r\n        // 查询关键词\r\n        query: '',\r\n        // 分类ID\r\n        cid: getUrl(\"cid\"),\r\n        // 页数索引\r\n        pagenum: 1,\r\n        // 每页长度\r\n        pagesize: 10\r\n    }\r\n\r\n    // 2 总页码 是在发送请求成功了 才能 正确的赋值\r\n    var TotalPage = 1;\r\n    init();\r\n    function init() {\r\n        eventList();\r\n        mui.init({\r\n            pullRefresh: {\r\n                container: \".pyg_view\",//下拉刷新容器标识，querySelector能定位的css选择器均可，比如：id、.class等\r\n                // 下拉刷新组件的配置\r\n                down: {\r\n                    height: 50,//可选,默认50.触发下拉刷新拖动距离,\r\n                    auto: true,//可选,默认false.首次加载自动下拉刷新一次\r\n                    // 一打开页面的时候 自动显示 下拉刷新组件\r\n                    // contentdown: \"下拉可以刷新\",//可选，在下拉可刷新状态时，下拉刷新控件上显示的标题内容\r\n                    // contentover: \"释放立即刷新\",//可选，在释放可刷新状态时，下拉刷新控件上显示的标题内容\r\n                    // contentrefresh: \"正在刷新...\",//可选，正在刷新状态时，下拉刷新控件上显示的标题内容\r\n                    callback: function callback() {//必选，刷新函数，根据具体业务来编写，比如通过ajax从服务器获取新数据；\r\n                        var cb = function cb(data) {\r\n                            let html = template('goodListTemp', { arr: data })\r\n                            $('.list').html(html);\r\n\r\n                            mui(\".pyg_view\").pullRefresh().endPulldownToRefresh(); // 重置 上拉组件\r\n\r\n                            mui('.pyg_view').pullRefresh().refresh(true);\r\n                        }\r\n                        // 重置页码 变成第一页\r\n                        QueryObj.pagenum = 1;// 重置 上拉组件  思路十分正确 但是 mui框架不给力 没有效果 \r\n                        // 但是 我有方法来解决 bug 把以下代码 放入到 cb的回调函数中执行就可以了\r\n                        // mui('.pyg_view').pullRefresh().refresh(true);\r\n\r\n                        goodsSearch(cb);\r\n                    }\r\n                },\r\n                up: {\r\n                    callback: function callback() {\r\n                        if (QueryObj.pagenum >= TotalPage) {\r\n                            console.log(\"没有数据 不要再划了 网页都要崩掉！\"); // 自己把没有数据的提示 放入到页面中 一旦传入了一个true 那么这么上拉组件永远不会再被执行\r\n                            // 没数据了 肯定没有办法再执行 \r\n\r\n                            mui(\".pyg_view\").pullRefresh().endPullupToRefresh(true);\r\n                        } else {\r\n                            console.log(\"还有数据 准备 下一次的请求\");\r\n                            QueryObj.pagenum++;// 定义数据回来之后的逻辑\r\n                            var cb = function cb(data) {\r\n                                var html = template(\"goodListTemp\", {\r\n                                    arr: data\r\n                                }); // append 追加\r\n\r\n                                $(\".list\").append(html); // 结束上拉组件\r\n                                // 结束上拉加载更多 如果没有数据 传入 true 否则 传入 false\r\n\r\n                                mui(\".pyg_view\").pullRefresh().endPullupToRefresh(false);\r\n                            };\r\n                            goodsSearch(cb);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // 绑定事件\r\n    function eventList() {  \r\n        $('.list').on('tap','a',function(){\r\n            let href = this.href;\r\n            location.href = href;\r\n        })\r\n    }\r\n    // 获取商品列表数据\r\n    function goodsSearch(func) {\r\n        $.get('http://api.pyg.ak48.xyz/api/public/v1/goods/search', QueryObj, function (res) {\r\n            if (res.meta.status == 200) {\r\n                var data = res.data.goods;\r\n                // 计算总页数\r\n                TotalPage = Math.ceil(res.data.total / QueryObj.pagesize);\r\n\r\n                // 生成标签\r\n                func(data);\r\n            } else {\r\n                console.log('请求数据失败');\r\n            }\r\n        })\r\n    }\r\n\r\n    // 获取页面地址栏?号后带的数据\r\n    function getUrl(name) {\r\n        var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\r\n        var r = window.location.search.substr(1).match(reg);\r\n        if (r != null) return decodeURI(r[2]);\r\n        return null;\r\n    }\r\n})"],"file":"goods_list.js"}